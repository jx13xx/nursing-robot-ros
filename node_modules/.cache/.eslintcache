[{"/home/jean/Documents/react-ros/react-ros-robot-2/react-ros-robot/src/index.js":"1","/home/jean/Documents/react-ros/react-ros-robot-2/react-ros-robot/src/App.js":"2","/home/jean/Documents/react-ros/react-ros-robot-2/react-ros-robot/src/reportWebVitals.js":"3","/home/jean/Documents/react-ros/react-ros-robot-2/react-ros-robot/src/components/Footer.jsx":"4","/home/jean/Documents/react-ros/react-ros-robot-2/react-ros-robot/src/components/Header.jsx":"5","/home/jean/Documents/react-ros/react-ros-robot-2/react-ros-robot/src/components/Body.jsx":"6","/home/jean/Documents/react-ros/react-ros-robot-2/react-ros-robot/src/components/Home.jsx":"7","/home/jean/Documents/react-ros/react-ros-robot-2/react-ros-robot/src/components/About.jsx":"8","/home/jean/Documents/react-ros/react-ros-robot-2/react-ros-robot/src/components/Carder.jsx":"9","/home/jean/Documents/react-ros/react-ros-robot-2/react-ros-robot/src/components/ContactUsPage.jsx":"10","/home/jean/Documents/react-ros/react-ros-robot-2/react-ros-robot/src/components/Connection.jsx":"11","/home/jean/Documents/react-ros/react-ros-robot-2/react-ros-robot/src/scripts/config.js":"12","/home/jean/Documents/react-ros/react-ros-robot-2/react-ros-robot/src/components/TeleOperation.jsx":"13"},{"size":547,"mtime":1633248548868,"results":"14","hashOfConfig":"15"},{"size":308,"mtime":1633281244500,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1633247545501,"results":"17","hashOfConfig":"15"},{"size":791,"mtime":1633773868311,"results":"18","hashOfConfig":"15"},{"size":1289,"mtime":1633282175186,"results":"19","hashOfConfig":"15"},{"size":719,"mtime":1633766706777,"results":"20","hashOfConfig":"15"},{"size":1217,"mtime":1633767121395,"results":"21","hashOfConfig":"15"},{"size":358,"mtime":1633252313625,"results":"22","hashOfConfig":"15"},{"size":853,"mtime":1633281135055,"results":"23","hashOfConfig":"15"},{"size":1654,"mtime":1633282643166,"results":"24","hashOfConfig":"15"},{"size":1604,"mtime":1633764107962,"results":"25","hashOfConfig":"15"},{"size":188,"mtime":1633773083598,"results":"26","hashOfConfig":"15"},{"size":3243,"mtime":1633777314598,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1pnh0gi",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},"/home/jean/Documents/react-ros/react-ros-robot-2/react-ros-robot/src/index.js",[],["59","60"],"/home/jean/Documents/react-ros/react-ros-robot-2/react-ros-robot/src/App.js",[],"/home/jean/Documents/react-ros/react-ros-robot-2/react-ros-robot/src/reportWebVitals.js",[],"/home/jean/Documents/react-ros/react-ros-robot-2/react-ros-robot/src/components/Footer.jsx",[],"/home/jean/Documents/react-ros/react-ros-robot-2/react-ros-robot/src/components/Header.jsx",[],"/home/jean/Documents/react-ros/react-ros-robot-2/react-ros-robot/src/components/Body.jsx",[],"/home/jean/Documents/react-ros/react-ros-robot-2/react-ros-robot/src/components/Home.jsx",["61"],"import React,  {Component} from 'react';\nimport {Button} from 'react-bootstrap';\nimport Connection from \"./Connection\";\nimport TeleOperation from './TeleOperation';\nimport {Row, Col, Container} from \"react-bootstrap\";\n\nclass Home extends Component{\n    state = {\n        counter: 1,\n    };\n\n    // increment_counter() {\n    //     // this.state.counter = this.state.counter +1;\n    //     this.setState({ counter: this.state.counter + 1});\n    //     console.log(this.state.counter);\n    // }\n    render(){\n        return (\n            <div>\n                <Container> \n                <h1 className=\"text-center mt-3\">Nursing Robot Control Page</h1>                    \n                <Row> \n                    <Col>\n                    <Connection />\n                    </Col>\n                </Row>         \n\n                <Row> \n                    <Col>\n                    <TeleOperation />\n                    </Col>\n                    <Col>\n                    <h1>MAP </h1>\n                    <p>This will be added on later for displaying the map buttons</p>\n                    </Col>\n                </Row>\n                </Container>\n            </div>\n\n        );\n    }\n\n\n}\n\nexport default Home;","/home/jean/Documents/react-ros/react-ros-robot-2/react-ros-robot/src/components/About.jsx",[],"/home/jean/Documents/react-ros/react-ros-robot-2/react-ros-robot/src/components/Carder.jsx",[],["62","63"],"/home/jean/Documents/react-ros/react-ros-robot-2/react-ros-robot/src/components/ContactUsPage.jsx",[],"/home/jean/Documents/react-ros/react-ros-robot-2/react-ros-robot/src/components/Connection.jsx",["64"],"import React, { Component } from 'react'\nimport { Alert } from 'react-bootstrap';\nimport config from \"../scripts/config.js\"\n\nclass Connection extends Component {\n state = {\n     connect: false,\n     ros: null\n     \n }\n\n constructor(){\n     super();\n     this.init_connection();\n }\n\n init_connection(){\n     this.state.ros = new window.ROSLIB.Ros();\n    \n     console.log(this.state.ros);\n     this.state.ros.on(\"connection\", () =>{\n         console.log(\"connection established\");\n         this.setState({ connect: true});\n     });\n\n     this.state.ros.on(\"close\", () =>{\n        console.log(\"connection is closed\");\n        this.setState({ connect: false});\n\n        // try to reconnect every 3 seconds\n        setTimeout( () =>{\n            try{\n                this.state.ros.connect(\"ws://\"+config.ROSBRIDGE_SERVER_IP+\":\"+config.ROSBRIDGE_SERVER_PORT + \"\");\n             } catch(error) {\n                 console.log(\"failed to connect to ros client\")\n                }\n        },  config.RECONNECTION_TIMER)\n     });\n\n     try{\n         console.log(\"ws://\"+config.ROSBRIDGE_SERVER_IP+\":\"+config.ROSBRIDGE_SERVER_PORT + \"\");\n        this.state.ros.connect(\"ws://\"+config.ROSBRIDGE_SERVER_IP+\":\"+config.ROSBRIDGE_SERVER_PORT + \"\");\n     } catch(error) {console.log(\"failed to connect to ros client\")}\n }\n\n render() {\n     return (\n         <div>\n             <Alert className=\"text-center m-3\" \n             variant={this.state.connect? \"success\" : \"danger\"}>{this.state.connect? \"ROS Client Established\" : \"ROS Client not Established\"}</Alert>\n         </div>\n     )\n }\n\n\n}\n\nexport default Connection;","/home/jean/Documents/react-ros/react-ros-robot-2/react-ros-robot/src/scripts/config.js",[],"/home/jean/Documents/react-ros/react-ros-robot-2/react-ros-robot/src/components/TeleOperation.jsx",["65"],"import React, { Component } from 'react'\nimport { Joystick } from 'react-joystick-component';\nimport config from \"../scripts/config.js\"\nclass TeleOperation extends Component{\n    state = { \n        ros: null,\n        connect: false,\n    };\n\n\n    constructor(){\n        super();\n        this.init_connection();\n\n        this.handleMove = this.handleMove.bind(this);\n        this.handleStop = this.handleStop.bind(this)\n    }\n\n    init_connection(){\n     this.state.ros = new window.ROSLIB.Ros();\n    \n     console.log(this.state.ros);\n     this.state.ros.on(\"connection\", () =>{\n         console.log(\"connection established in the teleoperation\");\n         console.log(this.state.ros)\n         this.setState({ connect: true});\n     });\n\n     this.state.ros.on(\"close\", () =>{\n        console.log(\"connection is closed\");\n        this.setState({ connect: false});\n\n        // try to reconnect every 3 seconds\n        setTimeout( () =>{\n            try{\n                this.state.ros.connect(\"ws://\"+config.ROSBRIDGE_SERVER_IP+\":\"+config.ROSBRIDGE_SERVER_PORT + \"\");\n             } catch(error) {\n                 console.log(\"failed to connect to ros client\")\n                }\n        },  config.RECONNECTION_TIMER)\n     });\n\n     try{\n         console.log(\"ws://\"+config.ROSBRIDGE_SERVER_IP+\":\"+config.ROSBRIDGE_SERVER_PORT + \"\");\n        this.state.ros.connect(\"ws://\"+config.ROSBRIDGE_SERVER_IP+\":\"+config.ROSBRIDGE_SERVER_PORT + \"\");\n     } catch(error) {console.log(\"failed to connect to ros client\")}\n }\n\n    handleMove(event) {\n       console.log(\"handle move\");\n        var cmd_vel = new window.ROSLIB.Topic({\n            ros: this.state.ros,\n            name: config.CMD_VEL_TOPIC,\n            messageType: \"geometry_msgs/Twist\",\n        });\n        // we need to create a twist message to be published to rosbridge\n        var twist = new window.ROSLIB.Message({\n    \n            linear:{\n                x: event.y / 100,\n                y:0,\n                z:0,\n            },\n            angular:{   \n                x:0,\n                y:0,\n                z: -event.x / 100,\n            }\n        });\n\n        // we need to publish the message on the cmd_vel topic\n        cmd_vel.publish(twist)\n        \n    }\n    handleStop(event) {\n        console.log(\"handle stop\");\n        var cmd_vel = new window.ROSLIB.Topic({\n            ros: this.state.ros,\n            name: config.CMD_VEL_TOPIC,\n            messageType: \"geometry_msgs/Twist\",\n        });\n        // we need to create a twist message to be published to rosbridge\n        var twist = new window.ROSLIB.Message({\n    \n            linear:{\n                x:0,\n                y:0,\n                z:0,\n            },\n            angular:{\n                x:0,\n                y:0,\n                z:0,\n            }\n        });\n\n        // we need to publish the message on the cmd_vel topic\n        cmd_vel.publish(twist)\n    }\n    render(){\n\n        return ( \n        \n        <div>\n            <Joystick \n            size={100} \n            baseColor=\"grey\" \n            stickColor=\"black\" \n            move={this.handleMove} \n            stop={this.handleStop}>\n\n            </Joystick>\n        </div>\n        \n        )\n    }\n\n}\n\nexport default TeleOperation;\n",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":2,"column":9,"nodeType":"72","messageId":"73","endLine":2,"endColumn":15},{"ruleId":"66","replacedBy":"74"},{"ruleId":"68","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":18,"column":6,"nodeType":"78","messageId":"79","endLine":18,"endColumn":16},{"ruleId":"76","severity":1,"message":"77","line":20,"column":6,"nodeType":"78","messageId":"79","endLine":20,"endColumn":16},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar",["80"],["81"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","no-global-assign","no-unsafe-negation"]